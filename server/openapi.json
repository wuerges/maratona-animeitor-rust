{
  "openapi": "3.0.3",
  "info": {
    "title": "server",
    "description": "Maratona Animeitor API",
    "contact": {
      "name": "Emilio Wuerges",
      "email": "wuerges@gmail.com"
    },
    "license": {
      "name": ""
    },
    "version": "0.12.0"
  },
  "paths": {
    "/api/allruns_ws": {
      "get": {
        "tags": [
          "crate"
        ],
        "summary": "Returns all runs as a websocket connection.",
        "description": "Returns all runs as a websocket connection.\nAPI description is not exact, because response is a websocket connection.",
        "operationId": "get_allruns_ws",
        "responses": {
          "200": {
            "description": "WEBSOCKET: Get contest runs in a websocket connection",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunTuple"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/config": {
      "get": {
        "tags": [
          "crate"
        ],
        "summary": "Gets the contest description.",
        "description": "Gets the contest description.",
        "operationId": "get_config_file",
        "responses": {
          "200": {
            "description": "Contest site configuration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigContest"
                }
              }
            }
          }
        }
      }
    },
    "/api/contest": {
      "get": {
        "tags": [
          "crate"
        ],
        "summary": "Gets the contest description.",
        "description": "Gets the contest description.",
        "operationId": "get_contest_file",
        "responses": {
          "200": {
            "description": "Contest description",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContestFile"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Answer": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Yes"
            ],
            "properties": {
              "Yes": {
                "type": "integer",
                "format": "int64",
                "description": "Accepted, with the time of the submission."
              }
            }
          },
          {
            "type": "string",
            "description": "Rejected.",
            "enum": [
              "No"
            ]
          },
          {
            "type": "string",
            "description": "Waiting to be judged.",
            "enum": [
              "Wait"
            ]
          },
          {
            "type": "string",
            "description": "Unknown.",
            "enum": [
              "Unk"
            ]
          }
        ],
        "description": "The judge answer to a submission."
      },
      "ConfigContest": {
        "type": "object",
        "description": "Site configuration for contest.",
        "required": [
          "sedes"
        ],
        "properties": {
          "sedes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SedeEntry"
            },
            "description": "A site entry."
          }
        }
      },
      "ContestFile": {
        "type": "object",
        "description": "A contest serialized in the api response.",
        "required": [
          "contest_name",
          "teams",
          "current_time",
          "maximum_time",
          "score_freeze_time",
          "penalty_per_wrong_answer",
          "score_board",
          "number_problems"
        ],
        "properties": {
          "contest_name": {
            "type": "string",
            "description": "Name of the contest."
          },
          "current_time": {
            "type": "integer",
            "format": "int64",
            "description": "Current contest time."
          },
          "maximum_time": {
            "type": "integer",
            "format": "int64",
            "description": "Maximum time (contest ends)."
          },
          "number_problems": {
            "type": "integer",
            "description": "Number of problems in the contest.",
            "minimum": 0
          },
          "penalty_per_wrong_answer": {
            "type": "integer",
            "format": "int64",
            "description": "Penalty per wrong answer."
          },
          "score_board": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Score board. (Not used by animaitor)."
          },
          "score_freeze_time": {
            "type": "integer",
            "format": "int64",
            "description": "Time that score gets frozen."
          },
          "teams": {
            "type": "object",
            "description": "Map of the teams.",
            "additionalProperties": {
              "$ref": "#/components/schemas/Team"
            }
          }
        }
      },
      "Problem": {
        "type": "object",
        "description": "A problem in the scoreboard.",
        "required": [
          "solved",
          "submissions",
          "penalty",
          "time_solved",
          "answers"
        ],
        "properties": {
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answer"
            },
            "description": "What were the judges answers to this problem for this team?"
          },
          "penalty": {
            "type": "integer",
            "format": "int64",
            "description": "How much penalty in total?"
          },
          "solved": {
            "type": "boolean",
            "description": "Was the problem solved?"
          },
          "submissions": {
            "type": "integer",
            "description": "How many submissions?",
            "minimum": 0
          },
          "time_solved": {
            "type": "integer",
            "format": "int64",
            "description": "When was it solved?"
          }
        }
      },
      "RunTuple": {
        "type": "object",
        "description": "A submission being judged.",
        "required": [
          "id",
          "time",
          "team_login",
          "prob",
          "answer"
        ],
        "properties": {
          "answer": {
            "$ref": "#/components/schemas/Answer"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Id of submission."
          },
          "prob": {
            "type": "string",
            "description": "The problem letter."
          },
          "team_login": {
            "type": "string",
            "description": "The team login."
          },
          "time": {
            "type": "integer",
            "format": "int64",
            "description": "Time of the submision."
          }
        }
      },
      "SedeEntry": {
        "type": "object",
        "description": "A site entry.",
        "required": [
          "name",
          "codes"
        ],
        "properties": {
          "bronze": {
            "type": "integer",
            "description": "Bronze medal position.",
            "nullable": true,
            "minimum": 0
          },
          "codes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Site codes, using in filtering groups of sites."
          },
          "contest": {
            "type": "string",
            "description": "Contest that owns this site.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Site name."
          },
          "ouro": {
            "type": "integer",
            "description": "Golden medal position.",
            "nullable": true,
            "minimum": 0
          },
          "prata": {
            "type": "integer",
            "description": "Silver medal position.",
            "nullable": true,
            "minimum": 0
          },
          "style": {
            "type": "string",
            "description": "Style of the site (For CSS)",
            "nullable": true
          }
        }
      },
      "Team": {
        "type": "object",
        "description": "A team in the contest.",
        "required": [
          "login",
          "escola",
          "name",
          "placement",
          "placement_global",
          "problems"
        ],
        "properties": {
          "escola": {
            "type": "string",
            "description": "The school of the team."
          },
          "login": {
            "type": "string",
            "description": "BOCA's login."
          },
          "name": {
            "type": "string",
            "description": "The name of the team."
          },
          "placement": {
            "type": "integer",
            "description": "Placement in the site.",
            "minimum": 0
          },
          "placement_global": {
            "type": "integer",
            "description": "Global placement across all sites.",
            "minimum": 0
          },
          "problems": {
            "type": "object",
            "description": "State of the problems that the team is solving.",
            "additionalProperties": {
              "$ref": "#/components/schemas/Problem"
            }
          }
        }
      }
    }
  }
}
